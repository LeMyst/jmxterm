on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

name: Create Release
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['17', '21', '25']
    
    steps:
      - name: ðŸ“¦ Checkout Code
        uses: actions/checkout@v5

      - name: ðŸš€ Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Set release version (strip leading v)
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: ðŸ›  Build with Maven for Java ${{ matrix.java }}
        run: mvn -B package --file pom.xml -Ddist.finalName=jmxterm-${{ env.RELEASE_VERSION }}-java${{ matrix.java }}

      - name: Debug list target directory
        run: ls -la target || true

      - name: ðŸ“¦ Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: jmxterm-java${{ matrix.java }}
          path: target/jmxterm-${{ env.RELEASE_VERSION }}-java${{ matrix.java }}*.jar
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ðŸ“¦ Checkout Code
        uses: actions/checkout@v5

      - name: ðŸš€ Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN

      # This publishes the "official" artifact to GitHub Packages - just Java 17 version
      - name: ðŸ“¦ Deploy to GitHub Packages
        run: mvn -B deploy --file pom.xml -DskipTests
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸ“¥ Download all artifacts
        uses: actions/download-artifact@v6
        with:
          path: release-artifacts

      - name: Get latest release commit SHA
        if: env.latest_nightly_commit == null
        run: |
          latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "latest_release=${latest_release}" >> $GITHUB_ENV

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.latest_release }}
          includeInvalidCommits: true

      - name: ðŸš€ Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            release-artifacts/**/*.jar
            target/*.deb
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
