# This workflow builds and tests the project across multiple JDKs (17, 21),
# while producing release artifacts (and Docker image) only once (on JDK 17)
# to avoid duplicate artifacts and repeated security scanning.
#
# Matrix test job:
#   - Runs 'mvn -B verify' on JDK 17, 21
# Build job:
#   - Runs full package & security scanning on JDK 17 only
# Docker job:
#   - Builds and (on non-PR events) pushes multi-arch image based on the packaged artifacts

name: Java CI with Maven

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Test (JDK ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [17, 21]
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: maven

      - name: Maven verify (tests + integration checks)
        run: mvn -B -q --no-transfer-progress verify

  build:
    name: Package & Scan (JDK 17)
    needs: test
    permissions:
      contents: write
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B -q --no-transfer-progress package --file pom.xml

      - name: Run Trivy vulnerability scanner (filesystem / dependencies)
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      # Optional: Upload full dependency graph to improve Dependabot alerting
      - name: Submit Dependency Snapshot
        if: github.actor != 'dependabot[bot]'
        uses: advanced-security/maven-dependency-submission-action@v5

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            target/*.jar
            target/*.deb

  docker:
    name: Docker Image
    permissions:
      contents: read
      packages: write
      security-events: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: release-artifacts
          path: target/

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/lemyst/jmxterm

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Local load (single-arch) build for scanning & possible subsequent steps
      - name: Build (local) image
        id: local
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Trivy scan (image)
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy (image) scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Build & Push (multi-arch)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
